apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hello-world.fullname" . }}
  labels:
    {{- include "hello-world.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "hello-world.selectorLabels" . | nindent 6 }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "hello-world.selectorLabels" . | nindent 8 }}
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "hello-world.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.security | nindent 8 }}
      containers:
      - name: {{ .Values.container.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.container.port }}
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: {{ .Values.environment.name | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.environment.logLevel | quote }}
        - name: APP_NAME
          value: {{ .Values.app.name | quote }}
        - name: APP_VERSION
          value: {{ .Values.app.version | quote }}
        - name: DEBUG_ENABLED
          value: {{ .Values.environment.debugEnabled | quote }}
        - name: PORT
          value: {{ .Values.container.port | quote }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.healthChecks.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.healthChecks.livenessProbe.path }}
            port: {{ .Values.healthChecks.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.healthChecks.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthChecks.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.healthChecks.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.healthChecks.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.healthChecks.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.healthChecks.readinessProbe.path }}
            port: {{ .Values.healthChecks.readinessProbe.port }}
          initialDelaySeconds: {{ .Values.healthChecks.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthChecks.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.healthChecks.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.healthChecks.readinessProbe.failureThreshold }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.security | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: varlog
          mountPath: /var/log
      volumes:
      - name: tmp
        emptyDir: {}
      - name: varlog
        emptyDir: {} 